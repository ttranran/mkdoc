{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello ranran \u4f60\u597d\uff0cranran\uff01 \u8fd9\u662f MKDOCS \u7684\u9ed8\u8ba4\u9875\uff0c\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5f00\u59cb\u3002","title":"Hello ranran"},{"location":"#hello-ranran","text":"\u4f60\u597d\uff0cranran\uff01 \u8fd9\u662f MKDOCS \u7684\u9ed8\u8ba4\u9875\uff0c\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5f00\u59cb\u3002","title":"Hello ranran"},{"location":"cron%20shutdown/","text":"\u8981\u4f7f\u7528 cron \u8bbe\u7f6e\u5b9a\u65f6\u5173\u673a\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a 1. \u7f16\u8f91 crontab \u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u6765\u7f16\u8f91\u5f53\u524d\u7528\u6237\u7684 crontab \u6587\u4ef6\uff1a crontab -e 2. \u6dfb\u52a0\u5173\u673a\u4efb\u52a1 \u5728\u6253\u5f00\u7684\u7f16\u8f91\u5668\u4e2d\uff0c\u6dfb\u52a0\u4e00\u884c\u6765\u8bbe\u7f6e\u5b9a\u65f6\u5173\u673a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6bcf\u5929\u665a\u4e0a 10 \u70b9\u5173\u673a\uff0c\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a \u590d\u5236 0 22 * * * /sbin/shutdown now \u8fd9\u884c\u7684\u610f\u601d\u662f\uff1a 0 \uff1a\u5206\u949f\uff080 \u5206\u949f\uff09 22 \uff1a\u5c0f\u65f6\uff08\u665a\u4e0a 10 \u70b9\uff09 * * * \uff1a\u6bcf\u5929\u3001\u6bcf\u6708\u3001\u6bcf\u5468\u7684\u4efb\u610f\u65e5\u671f 3. \u4fdd\u5b58\u5e76\u9000\u51fa \u6839\u636e\u4f60\u4f7f\u7528\u7684\u7f16\u8f91\u5668\uff0c\u4fdd\u5b58\u5e76\u9000\u51fa\uff1a \u5982\u679c\u662f nano \uff0c\u6309 Ctrl + X \uff0c\u7136\u540e\u6309 Y \u786e\u8ba4\u4fdd\u5b58\u3002 \u5982\u679c\u662f vim \uff0c\u8f93\u5165 :wq \u7136\u540e\u6309 Enter \u3002 4. \u786e\u8ba4\u4efb\u52a1\u5df2\u6dfb\u52a0 \u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7684 crontab \u4efb\u52a1\uff1a crontab -l \u786e\u4fdd\u4f60\u521a\u521a\u6dfb\u52a0\u7684\u5173\u673a\u4efb\u52a1\u5728\u5217\u8868\u4e2d\u3002 5. \u6ce8\u610f\u4e8b\u9879 \u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u65f6\u95f4\u8bbe\u7f6e\u6b63\u786e\u3002 \u5982\u679c\u4f60\u9700\u8981\u53d6\u6d88\u5b9a\u65f6\u5173\u673a\uff0c\u53ef\u4ee5\u518d\u6b21\u8fd0\u884c crontab -e \u5e76\u5220\u9664\u6216\u6ce8\u91ca\u6389\u8be5\u884c\uff08\u5728\u884c\u524d\u52a0 # \uff09\u3002 \u8fd9\u6837\u8bbe\u7f6e\u540e\uff0c\u7cfb\u7edf\u4f1a\u5728\u6bcf\u5929\u665a\u4e0a 10 \u70b9\u81ea\u52a8\u5173\u673a\u3002","title":"Cron shutdown"},{"location":"cron%20shutdown/#1-crontab","text":"\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u6765\u7f16\u8f91\u5f53\u524d\u7528\u6237\u7684 crontab \u6587\u4ef6\uff1a crontab -e","title":"1. \u7f16\u8f91 crontab"},{"location":"cron%20shutdown/#2","text":"\u5728\u6253\u5f00\u7684\u7f16\u8f91\u5668\u4e2d\uff0c\u6dfb\u52a0\u4e00\u884c\u6765\u8bbe\u7f6e\u5b9a\u65f6\u5173\u673a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u6bcf\u5929\u665a\u4e0a 10 \u70b9\u5173\u673a\uff0c\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a \u590d\u5236 0 22 * * * /sbin/shutdown now \u8fd9\u884c\u7684\u610f\u601d\u662f\uff1a 0 \uff1a\u5206\u949f\uff080 \u5206\u949f\uff09 22 \uff1a\u5c0f\u65f6\uff08\u665a\u4e0a 10 \u70b9\uff09 * * * \uff1a\u6bcf\u5929\u3001\u6bcf\u6708\u3001\u6bcf\u5468\u7684\u4efb\u610f\u65e5\u671f","title":"2. \u6dfb\u52a0\u5173\u673a\u4efb\u52a1"},{"location":"cron%20shutdown/#3","text":"\u6839\u636e\u4f60\u4f7f\u7528\u7684\u7f16\u8f91\u5668\uff0c\u4fdd\u5b58\u5e76\u9000\u51fa\uff1a \u5982\u679c\u662f nano \uff0c\u6309 Ctrl + X \uff0c\u7136\u540e\u6309 Y \u786e\u8ba4\u4fdd\u5b58\u3002 \u5982\u679c\u662f vim \uff0c\u8f93\u5165 :wq \u7136\u540e\u6309 Enter \u3002","title":"3. \u4fdd\u5b58\u5e76\u9000\u51fa"},{"location":"cron%20shutdown/#4","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u5f53\u524d\u7684 crontab \u4efb\u52a1\uff1a crontab -l \u786e\u4fdd\u4f60\u521a\u521a\u6dfb\u52a0\u7684\u5173\u673a\u4efb\u52a1\u5728\u5217\u8868\u4e2d\u3002","title":"4. \u786e\u8ba4\u4efb\u52a1\u5df2\u6dfb\u52a0"},{"location":"cron%20shutdown/#5","text":"\u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u65f6\u95f4\u8bbe\u7f6e\u6b63\u786e\u3002 \u5982\u679c\u4f60\u9700\u8981\u53d6\u6d88\u5b9a\u65f6\u5173\u673a\uff0c\u53ef\u4ee5\u518d\u6b21\u8fd0\u884c crontab -e \u5e76\u5220\u9664\u6216\u6ce8\u91ca\u6389\u8be5\u884c\uff08\u5728\u884c\u524d\u52a0 # \uff09\u3002 \u8fd9\u6837\u8bbe\u7f6e\u540e\uff0c\u7cfb\u7edf\u4f1a\u5728\u6bcf\u5929\u665a\u4e0a 10 \u70b9\u81ea\u52a8\u5173\u673a\u3002","title":"5. \u6ce8\u610f\u4e8b\u9879"},{"location":"docker%20ufw%E4%BF%AE%E6%94%B9/","text":"1.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539 UFW \u7684\u914d\u7f6e\u6587\u4ef6 /etc/ufw/after.rules \uff0c\u5728\u6700\u540e\u6dfb\u52a0\u4e0a\u5982\u4e0b\u89c4\u5219\uff1a # BEGIN UFW AND DOCKER *filter :ufw-user-forward - [0:0] :ufw-docker-logging-deny - [0:0] :DOCKER-USER - [0:0] -A DOCKER-USER -j ufw-user-forward -A DOCKER-USER -j RETURN -s 10.0.0.0/8 -A DOCKER-USER -j RETURN -s 172.16.0.0/12 -A DOCKER-USER -j RETURN -s 192.168.0.0/16 -A DOCKER-USER -p udp -m udp --sport 53 --dport 1024:65535 -j RETURN -A DOCKER-USER -j ufw-docker-logging-deny -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 192.168.0.0/16 -A DOCKER-USER -j ufw-docker-logging-deny -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 10.0.0.0/8 -A DOCKER-USER -j ufw-docker-logging-deny -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 172.16.0.0/12 -A DOCKER-USER -j ufw-docker-logging-deny -p udp -m udp --dport 0:32767 -d 192.168.0.0/16 -A DOCKER-USER -j ufw-docker-logging-deny -p udp -m udp --dport 0:32767 -d 10.0.0.0/8 -A DOCKER-USER -j ufw-docker-logging-deny -p udp -m udp --dport 0:32767 -d 172.16.0.0/12 -A DOCKER-USER -j RETURN -A ufw-docker-logging-deny -m limit --limit 3/min --limit-burst 10 -j LOG --log-prefix \"[UFW DOCKER BLOCK] \" -A ufw-docker-logging-deny -j DROP COMMIT # END UFW AND DOCKER \u7136\u540e\u91cd\u542f UFW\uff0c sudo systemctl restart ufw \u3002\u73b0\u5728\u5916\u90e8\u5c31\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee Docker \u53d1\u5e03\u51fa\u6765\u7684\u4efb\u4f55\u7aef\u53e3\u4e86\uff0c\u4f46\u662f\u5bb9\u5668\u5185\u90e8\u4ee5\u53ca\u79c1\u6709\u7f51\u7edc\u5730\u5740\u4e0a\u53ef\u4ee5\u6b63\u5e38\u4e92\u76f8\u8bbf\u95ee\uff0c\u800c\u4e14\u5bb9\u5668\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u5916\u90e8\u7684\u7f51\u7edc\u3002 \u53ef\u80fd\u7531\u4e8e\u67d0\u4e9b\u672a\u77e5\u539f\u56e0\uff0c\u91cd\u542f UFW \u4e4b\u540e\u89c4\u5219\u4e5f\u65e0\u6cd5\u751f\u6548\uff0c\u8bf7\u91cd\u542f\u670d\u52a1\u5668\u3002 2.\u653e\u5f00\u7aef\u53e3 \u5982\u679c\u5e0c\u671b\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee Docker \u5bb9\u5668\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u5bb9\u5668\u7684\u670d\u52a1\u7aef\u53e3\u662f 80 \u3002\u90a3\u5c31\u53ef\u4ee5\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\uff1a ufw route allow proto tcp from any to any port 80 \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u6240\u6709\u7528 Docker \u53d1\u5e03\u51fa\u6765\u7684\u5e76\u4e14\u5185\u90e8\u670d\u52a1\u7aef\u53e3\u4e3a 80 \u7684\u6240\u6709\u670d\u52a1\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u7aef\u53e3 80 \u662f\u5bb9\u5668\u7684\u7aef\u53e3\uff0c\u800c\u975e\u4f7f\u7528 -p 0.0.0.0:8080:80 \u9009\u9879\u53d1\u5e03\u5728\u670d\u52a1\u5668\u4e0a\u7684 8080 \u7aef\u53e3\u3002 \u5982\u679c\u6709\u591a\u4e2a\u5bb9\u5668\u7684\u670d\u52a1\u7aef\u53e3\u4e3a 80\uff0c\u4f46\u53ea\u5e0c\u671b\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u67d0\u4e2a\u7279\u5b9a\u7684\u5bb9\u5668\u3002\u6bd4\u5982\u8be5\u5bb9\u5668\u7684\u79c1\u6709\u5730\u5740\u4e3a 172.17.0.2 \uff0c\u5c31\u7528\u7c7b\u4f3c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a ufw route allow proto tcp from any to 172.17.0.2 port 80 \u5982\u679c\u4e00\u4e2a\u5bb9\u5668\u7684\u670d\u52a1\u662f UDP \u534f\u8bae\uff0c\u5047\u5982\u662f DNS \u670d\u52a1\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u6240\u6709\u53d1\u5e03\u51fa\u6765\u7684 DNS \u670d\u52a1\uff1a ufw route allow proto udp from any to any port 53 \u540c\u6837\u7684\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u5bb9\u5668\uff0c\u6bd4\u5982 IP \u5730\u5740\u4e3a 172.17.0.2 \uff1a ufw route allow proto udp from any to 172.17.0.2 port 53","title":"Docker ufw\u4fee\u6539"},{"location":"docker%20ufw%E4%BF%AE%E6%94%B9/#1","text":"\u4fee\u6539 UFW \u7684\u914d\u7f6e\u6587\u4ef6 /etc/ufw/after.rules \uff0c\u5728\u6700\u540e\u6dfb\u52a0\u4e0a\u5982\u4e0b\u89c4\u5219\uff1a # BEGIN UFW AND DOCKER *filter :ufw-user-forward - [0:0] :ufw-docker-logging-deny - [0:0] :DOCKER-USER - [0:0] -A DOCKER-USER -j ufw-user-forward -A DOCKER-USER -j RETURN -s 10.0.0.0/8 -A DOCKER-USER -j RETURN -s 172.16.0.0/12 -A DOCKER-USER -j RETURN -s 192.168.0.0/16 -A DOCKER-USER -p udp -m udp --sport 53 --dport 1024:65535 -j RETURN -A DOCKER-USER -j ufw-docker-logging-deny -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 192.168.0.0/16 -A DOCKER-USER -j ufw-docker-logging-deny -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 10.0.0.0/8 -A DOCKER-USER -j ufw-docker-logging-deny -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -d 172.16.0.0/12 -A DOCKER-USER -j ufw-docker-logging-deny -p udp -m udp --dport 0:32767 -d 192.168.0.0/16 -A DOCKER-USER -j ufw-docker-logging-deny -p udp -m udp --dport 0:32767 -d 10.0.0.0/8 -A DOCKER-USER -j ufw-docker-logging-deny -p udp -m udp --dport 0:32767 -d 172.16.0.0/12 -A DOCKER-USER -j RETURN -A ufw-docker-logging-deny -m limit --limit 3/min --limit-burst 10 -j LOG --log-prefix \"[UFW DOCKER BLOCK] \" -A ufw-docker-logging-deny -j DROP COMMIT # END UFW AND DOCKER \u7136\u540e\u91cd\u542f UFW\uff0c sudo systemctl restart ufw \u3002\u73b0\u5728\u5916\u90e8\u5c31\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee Docker \u53d1\u5e03\u51fa\u6765\u7684\u4efb\u4f55\u7aef\u53e3\u4e86\uff0c\u4f46\u662f\u5bb9\u5668\u5185\u90e8\u4ee5\u53ca\u79c1\u6709\u7f51\u7edc\u5730\u5740\u4e0a\u53ef\u4ee5\u6b63\u5e38\u4e92\u76f8\u8bbf\u95ee\uff0c\u800c\u4e14\u5bb9\u5668\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u5916\u90e8\u7684\u7f51\u7edc\u3002 \u53ef\u80fd\u7531\u4e8e\u67d0\u4e9b\u672a\u77e5\u539f\u56e0\uff0c\u91cd\u542f UFW \u4e4b\u540e\u89c4\u5219\u4e5f\u65e0\u6cd5\u751f\u6548\uff0c\u8bf7\u91cd\u542f\u670d\u52a1\u5668\u3002","title":"1.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"docker%20ufw%E4%BF%AE%E6%94%B9/#2","text":"\u5982\u679c\u5e0c\u671b\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee Docker \u5bb9\u5668\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u5bb9\u5668\u7684\u670d\u52a1\u7aef\u53e3\u662f 80 \u3002\u90a3\u5c31\u53ef\u4ee5\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\uff1a ufw route allow proto tcp from any to any port 80 \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u6240\u6709\u7528 Docker \u53d1\u5e03\u51fa\u6765\u7684\u5e76\u4e14\u5185\u90e8\u670d\u52a1\u7aef\u53e3\u4e3a 80 \u7684\u6240\u6709\u670d\u52a1\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e2a\u7aef\u53e3 80 \u662f\u5bb9\u5668\u7684\u7aef\u53e3\uff0c\u800c\u975e\u4f7f\u7528 -p 0.0.0.0:8080:80 \u9009\u9879\u53d1\u5e03\u5728\u670d\u52a1\u5668\u4e0a\u7684 8080 \u7aef\u53e3\u3002 \u5982\u679c\u6709\u591a\u4e2a\u5bb9\u5668\u7684\u670d\u52a1\u7aef\u53e3\u4e3a 80\uff0c\u4f46\u53ea\u5e0c\u671b\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u67d0\u4e2a\u7279\u5b9a\u7684\u5bb9\u5668\u3002\u6bd4\u5982\u8be5\u5bb9\u5668\u7684\u79c1\u6709\u5730\u5740\u4e3a 172.17.0.2 \uff0c\u5c31\u7528\u7c7b\u4f3c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a ufw route allow proto tcp from any to 172.17.0.2 port 80 \u5982\u679c\u4e00\u4e2a\u5bb9\u5668\u7684\u670d\u52a1\u662f UDP \u534f\u8bae\uff0c\u5047\u5982\u662f DNS \u670d\u52a1\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5141\u8bb8\u5916\u90e8\u7f51\u7edc\u8bbf\u95ee\u6240\u6709\u53d1\u5e03\u51fa\u6765\u7684 DNS \u670d\u52a1\uff1a ufw route allow proto udp from any to any port 53 \u540c\u6837\u7684\uff0c\u5982\u679c\u53ea\u9488\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u5bb9\u5668\uff0c\u6bd4\u5982 IP \u5730\u5740\u4e3a 172.17.0.2 \uff1a ufw route allow proto udp from any to 172.17.0.2 port 53","title":"2.\u653e\u5f00\u7aef\u53e3"},{"location":"immich%E5%AE%89%E8%A3%85/","text":"\u5b89\u88c5\u6b65\u9aa4 1.\u5b89\u88c5WSL wsl --install \u5728\u5e94\u7528\u5546\u5e97\u5b89\u88c5debian\uff0c\u6253\u5f00\u865a\u62df\u5316 \u7528\u6237\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa.wslconfig\uff0c\u6253\u5f00\u7f51\u7edc\u6620\u5c04 [wsl2] networkingMode=mirrored \u4fee\u6539\u8f6f\u4ef6\u6e90 Debian Buster \u4ee5\u4e0a\u7248\u672c\u9ed8\u8ba4\u652f\u6301 HTTPS \u6e90\u3002\u5982\u679c\u9047\u5230\u65e0\u6cd5\u62c9\u53d6 HTTPS \u6e90\u7684\u60c5\u51b5\uff0c\u8bf7\u5148\u4f7f\u7528 HTTP \u6e90\u5e76\u5b89\u88c5\uff1a apt update apt install apt-transport-https ca-certificates # /etc/apt/sources.list # \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # \u4ee5\u4e0b\u5b89\u5168\u66f4\u65b0\u8f6f\u4ef6\u6e90\u5305\u542b\u4e86\u5b98\u65b9\u6e90\u4e0e\u955c\u50cf\u7ad9\u914d\u7f6e\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u4fee\u6539\u6ce8\u91ca\u5207\u6362 deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware # deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware apt-get install tsocks apt-get install wget 2.\u5b89\u88c5 \u7f16\u8f91 /etc/tsocks.conf \u6587\u4ef6\u3002\u627e\u5230 server = \u8fd9\u4e00\u884c\uff0c\u5c06\u5176\u4fee\u6539\u4e3a\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\u548c\u7aef\u53e3\uff0c\u4f8b\u5982 server = 192.168.1.102 1080 \uff08\u5047\u8bbe SOCKS \u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\u662f 192.168.1.102 \uff0c\u7aef\u53e3\u662f 1080 \uff09 server = 192.168.31.151 7898 mkdir ./immich-app cd ./immich-app tsocks wget -O docker-compose.yml https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml tsocks wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env \u670d\u52a1\u7aefdocker-compose name: immich services: immich-machine-learning: container_name: immich_machine_learning image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release} volumes: - model-cache:/cache ports: - 3003:3003 env_file: - .env restart: always healthcheck: disable: false volumes: model-cache: \u5b89\u88c5\u4e0b\u8f7d\u5927\u6a21\u578b \u5230\u5b58\u50a8\u5377\u76ee\u5f55 apt-get install git-lfs # https://huggingface.co/immich-app # https://hf-mirror.com/ \u955c\u50cf\u7ad9 ./clip \u653e\u5927\u6a21\u578b ./Facial Recognition\u653e\u4eba\u8138\u8bc6\u522b \u8bbe\u7f6e\u670d\u52a1\u7aef http://192.168.31.151:3003 \u9ed8\u8ba4\u670d\u52a1\u7aef http://immich-machine-learning:3003","title":"Immich\u5b89\u88c5"},{"location":"immich%E5%AE%89%E8%A3%85/#1wsl","text":"wsl --install \u5728\u5e94\u7528\u5546\u5e97\u5b89\u88c5debian\uff0c\u6253\u5f00\u865a\u62df\u5316 \u7528\u6237\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa.wslconfig\uff0c\u6253\u5f00\u7f51\u7edc\u6620\u5c04 [wsl2] networkingMode=mirrored \u4fee\u6539\u8f6f\u4ef6\u6e90 Debian Buster \u4ee5\u4e0a\u7248\u672c\u9ed8\u8ba4\u652f\u6301 HTTPS \u6e90\u3002\u5982\u679c\u9047\u5230\u65e0\u6cd5\u62c9\u53d6 HTTPS \u6e90\u7684\u60c5\u51b5\uff0c\u8bf7\u5148\u4f7f\u7528 HTTP \u6e90\u5e76\u5b89\u88c5\uff1a apt update apt install apt-transport-https ca-certificates # /etc/apt/sources.list # \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware # \u4ee5\u4e0b\u5b89\u5168\u66f4\u65b0\u8f6f\u4ef6\u6e90\u5305\u542b\u4e86\u5b98\u65b9\u6e90\u4e0e\u955c\u50cf\u7ad9\u914d\u7f6e\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u4fee\u6539\u6ce8\u91ca\u5207\u6362 deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware # deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware apt-get install tsocks apt-get install wget","title":"1.\u5b89\u88c5WSL"},{"location":"immich%E5%AE%89%E8%A3%85/#2","text":"\u7f16\u8f91 /etc/tsocks.conf \u6587\u4ef6\u3002\u627e\u5230 server = \u8fd9\u4e00\u884c\uff0c\u5c06\u5176\u4fee\u6539\u4e3a\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\u548c\u7aef\u53e3\uff0c\u4f8b\u5982 server = 192.168.1.102 1080 \uff08\u5047\u8bbe SOCKS \u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\u662f 192.168.1.102 \uff0c\u7aef\u53e3\u662f 1080 \uff09 server = 192.168.31.151 7898 mkdir ./immich-app cd ./immich-app tsocks wget -O docker-compose.yml https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml tsocks wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env \u670d\u52a1\u7aefdocker-compose name: immich services: immich-machine-learning: container_name: immich_machine_learning image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release} volumes: - model-cache:/cache ports: - 3003:3003 env_file: - .env restart: always healthcheck: disable: false volumes: model-cache: \u5b89\u88c5\u4e0b\u8f7d\u5927\u6a21\u578b \u5230\u5b58\u50a8\u5377\u76ee\u5f55 apt-get install git-lfs # https://huggingface.co/immich-app # https://hf-mirror.com/ \u955c\u50cf\u7ad9 ./clip \u653e\u5927\u6a21\u578b ./Facial Recognition\u653e\u4eba\u8138\u8bc6\u522b \u8bbe\u7f6e\u670d\u52a1\u7aef http://192.168.31.151:3003 \u9ed8\u8ba4\u670d\u52a1\u7aef http://immich-machine-learning:3003","title":"2.\u5b89\u88c5"},{"location":"xinjePLC%E5%81%9C%E6%AD%A2%E4%B8%8E%E5%90%AF%E5%8A%A8%E6%8C%87%E4%BB%A4/","text":"01 10 F5 E8 00 01 02 00 01 D5 B7 01 10 F5 E8 00 01 02 00 02 95 B6","title":"xinjePLC\u505c\u6b62\u4e0e\u542f\u52a8\u6307\u4ee4"},{"location":"%E4%BB%A3%E7%90%86/","text":"\u4ee3\u7406\u8bbe\u7f6e Git\u4ee3\u7406 git config --global http.proxy 'http://127.0.0.1:7890' git config --global https.proxy 'http://127.0.0.1:7890' git config --global http.proxy 'http://127.0.0.1:7899' git config --global https.proxy 'http://127.0.0.1:7899' git config --global --unset http.proxy git config --global --unset https.proxy wget\u4ee3\u7406 export DOCKER_CLIENT_TIMEOUT=240; export COMPOSE_TLS_VERSION=TLSv1_2; export DOCKER_TLS_VERIFY=0; export ALL_PROXY=socks5://127.0.0.1:7898 http_proxy=http://192.168.31.151:7899 https_proxy=http://192.168.31.151:7899 docker\u4ee3\u7406 docker\u5b98\u65b9\u6587\u6863 \u94fe\u63a5 1.\u521b\u5efadocker\u670d\u52a1 sudo mkdir -p /etc/systemd/system/docker.service.d 2.\u5199\u5165\u914d\u7f6e\u6587\u4ef6 [Service] Environment=\"HTTP_PROXY=http://192.168.31.233:7890\" Environment=\"HTTPS_PROXY=http://192.168.31.233:7890\" Environment=\"NO_PROXY=*\" ##\u4e0d\u542f\u7528 Environment=\"NO_PROXY=127.0.0.1\" 3.\u5237\u65b0\u66f4\u6539\u5e76\u91cd\u65b0\u542f\u52a8 Docker sudo systemctl daemon-reload sudo systemctl restart docker 4.\u9a8c\u8bc1\u914d\u7f6e\u662f\u5426\u5df2\u52a0\u8f7d\u5e76\u4e0e\u60a8\u6240\u505a\u7684\u66f4\u6539\u76f8\u5339\u914d sudo systemctl show --property=Environment docker","title":"\u4ee3\u7406\u8bbe\u7f6e"},{"location":"%E4%BB%A3%E7%90%86/#_1","text":"","title":"\u4ee3\u7406\u8bbe\u7f6e"},{"location":"%E4%BB%A3%E7%90%86/#git","text":"git config --global http.proxy 'http://127.0.0.1:7890' git config --global https.proxy 'http://127.0.0.1:7890' git config --global http.proxy 'http://127.0.0.1:7899' git config --global https.proxy 'http://127.0.0.1:7899' git config --global --unset http.proxy git config --global --unset https.proxy","title":"Git\u4ee3\u7406"},{"location":"%E4%BB%A3%E7%90%86/#wget","text":"export DOCKER_CLIENT_TIMEOUT=240; export COMPOSE_TLS_VERSION=TLSv1_2; export DOCKER_TLS_VERIFY=0; export ALL_PROXY=socks5://127.0.0.1:7898 http_proxy=http://192.168.31.151:7899 https_proxy=http://192.168.31.151:7899","title":"wget\u4ee3\u7406"},{"location":"%E4%BB%A3%E7%90%86/#docker","text":"docker\u5b98\u65b9\u6587\u6863 \u94fe\u63a5","title":"docker\u4ee3\u7406"},{"location":"%E4%BB%A3%E7%90%86/#1docker","text":"sudo mkdir -p /etc/systemd/system/docker.service.d","title":"1.\u521b\u5efadocker\u670d\u52a1"},{"location":"%E4%BB%A3%E7%90%86/#2","text":"[Service] Environment=\"HTTP_PROXY=http://192.168.31.233:7890\" Environment=\"HTTPS_PROXY=http://192.168.31.233:7890\" Environment=\"NO_PROXY=*\" ##\u4e0d\u542f\u7528 Environment=\"NO_PROXY=127.0.0.1\"","title":"2.\u5199\u5165\u914d\u7f6e\u6587\u4ef6"},{"location":"%E4%BB%A3%E7%90%86/#3-docker","text":"sudo systemctl daemon-reload sudo systemctl restart docker","title":"3.\u5237\u65b0\u66f4\u6539\u5e76\u91cd\u65b0\u542f\u52a8 Docker"},{"location":"%E4%BB%A3%E7%90%86/#4","text":"sudo systemctl show --property=Environment docker","title":"4.\u9a8c\u8bc1\u914d\u7f6e\u662f\u5426\u5df2\u52a0\u8f7d\u5e76\u4e0e\u60a8\u6240\u505a\u7684\u66f4\u6539\u76f8\u5339\u914d"},{"location":"%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%E7%BC%A9/","text":"// \u52a0\u5bc6\u538b\u7f29 7z a -p\"password\" -v800m \u76f8\u673a.7z \u76f8\u673a -p \u52a0\u5bc6\u538b\u7f29 -v800m \u6bcf\u5206\u5377800Mb","title":"\u538b\u7f29\u89e3\u538b\u7f29"},{"location":"%E5%BC%80%E6%9C%BA%E9%87%8D%E5%90%AF%E9%9D%A2%E6%9D%BF/","text":"1.\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\u5355\u5143\u6587\u4ef6 \uff1a sudo vi /etc/systemd/system/delayed-command.service 2. \u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 \uff1a [Unit] Description=Run a command after 10 seconds of boot [Service] Type=oneshot ExecStart=/bin/bash -c \"sleep 10; 1pctl restart\" [Install] WantedBy=multi-user.target 3.\u4fdd\u5b58\u5e76\u9000\u51fa\u542f\u7528\u670d\u52a1\uff1a sudo systemctl enable delayed-command.service \u91cd\u542f\u7cfb\u7edf \u4ee5\u6d4b\u8bd5\u670d\u52a1\u3002 4.\u91cd\u65b0\u52a0\u8f7d\u670d\u52a1 sudo systemctl daemon-reload","title":"\u5f00\u673a\u91cd\u542f\u9762\u677f"},{"location":"%E5%BC%80%E6%9C%BA%E9%87%8D%E5%90%AF%E9%9D%A2%E6%9D%BF/#1","text":"sudo vi /etc/systemd/system/delayed-command.service","title":"1.\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u670d\u52a1\u5355\u5143\u6587\u4ef6\uff1a"},{"location":"%E5%BC%80%E6%9C%BA%E9%87%8D%E5%90%AF%E9%9D%A2%E6%9D%BF/#2","text":"[Unit] Description=Run a command after 10 seconds of boot [Service] Type=oneshot ExecStart=/bin/bash -c \"sleep 10; 1pctl restart\" [Install] WantedBy=multi-user.target","title":"2.\u5728\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a"},{"location":"%E5%BC%80%E6%9C%BA%E9%87%8D%E5%90%AF%E9%9D%A2%E6%9D%BF/#3","text":"sudo systemctl enable delayed-command.service \u91cd\u542f\u7cfb\u7edf \u4ee5\u6d4b\u8bd5\u670d\u52a1\u3002","title":"3.\u4fdd\u5b58\u5e76\u9000\u51fa\u542f\u7528\u670d\u52a1\uff1a"},{"location":"%E5%BC%80%E6%9C%BA%E9%87%8D%E5%90%AF%E9%9D%A2%E6%9D%BF/#4","text":"sudo systemctl daemon-reload","title":"4.\u91cd\u65b0\u52a0\u8f7d\u670d\u52a1"},{"location":"%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/","text":"\u6302\u8f7d\u547d\u4ee4 rclone mount alist: /vol2/1000/netdisk/alist --header \"Referer:\" --multi-thread-streams 6 --buffer-size 512M --vfs-fast-fingerprint --vfs-cache-mode full --no-modtime --file-perms 0777 --copy-links --allow-other --allow-non-empty --umask 000 --daemon --cache-dir /vol1/1000/App/rclone/cache \u5378\u8f7d\u547d\u4ee4 fusermount -qzu /vol2/1000/netdisk/alist \u8bbe\u7f6e\u5f00\u673a\u91cd\u542f 1.\u6dfb\u52a0\u5f00\u673a\u542f\u52a8\u811a\u672c nano /etc/systemd/system/haorclone.service [Unit] Description=haorclone Service After=network.target [Service] Type=simple ExecStartPre=-/bin/sleep 30 ExecStart=rclone mount alist: /vol2/1000/netdisk/alist --header \"Referer:\" --multi-thread-streams 6 --buffer-size 512M --vfs-fast-fingerprint --vfs-cache-mode full --no-modtime --file-perms 0777 --copy-links --allow-other --allow-non-empty --umask 000 --cache-dir /vol1/1000/App/rclone/cache [Install] WantedBy=default.target 2.\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 \u66f4\u65b0systemd\u76ee\u5f55 systemctl daemon-reload \u521b\u5efa\u5f00\u673a\u5feb\u6377\u65b9\u5f0f systemctl enable haorclone.service \u542f\u52a8\u670d\u52a1 systemctl start haorclone.service \u67e5\u770b\u670d\u52a1\u72b6\u6001 systemctl status haorclone.service","title":"\u6302\u8f7d\u547d\u4ee4"},{"location":"%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/#_1","text":"rclone mount alist: /vol2/1000/netdisk/alist --header \"Referer:\" --multi-thread-streams 6 --buffer-size 512M --vfs-fast-fingerprint --vfs-cache-mode full --no-modtime --file-perms 0777 --copy-links --allow-other --allow-non-empty --umask 000 --daemon --cache-dir /vol1/1000/App/rclone/cache","title":"\u6302\u8f7d\u547d\u4ee4"},{"location":"%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/#_2","text":"fusermount -qzu /vol2/1000/netdisk/alist","title":"\u5378\u8f7d\u547d\u4ee4"},{"location":"%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/#_3","text":"","title":"\u8bbe\u7f6e\u5f00\u673a\u91cd\u542f"},{"location":"%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/#1","text":"nano /etc/systemd/system/haorclone.service [Unit] Description=haorclone Service After=network.target [Service] Type=simple ExecStartPre=-/bin/sleep 30 ExecStart=rclone mount alist: /vol2/1000/netdisk/alist --header \"Referer:\" --multi-thread-streams 6 --buffer-size 512M --vfs-fast-fingerprint --vfs-cache-mode full --no-modtime --file-perms 0777 --copy-links --allow-other --allow-non-empty --umask 000 --cache-dir /vol1/1000/App/rclone/cache [Install] WantedBy=default.target","title":"1.\u6dfb\u52a0\u5f00\u673a\u542f\u52a8\u811a\u672c"},{"location":"%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4/#2","text":"\u66f4\u65b0systemd\u76ee\u5f55 systemctl daemon-reload \u521b\u5efa\u5f00\u673a\u5feb\u6377\u65b9\u5f0f systemctl enable haorclone.service \u542f\u52a8\u670d\u52a1 systemctl start haorclone.service \u67e5\u770b\u670d\u52a1\u72b6\u6001 systemctl status haorclone.service","title":"2.\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6"}]}